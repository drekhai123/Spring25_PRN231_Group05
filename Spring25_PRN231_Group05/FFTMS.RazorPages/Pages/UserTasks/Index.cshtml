@page
@model FFTMS.RazorPages.Pages.UserTasks.IndexModel
@{
    ViewData["Title"] = "My Tasks";
    Layout = "_Layout";
}

<style>
    .table {
        margin: 0;
        width: 100% !important;
    }

    .table thead th {
        padding: 1rem;
        font-weight: 500;
        border-bottom: 2px solid #e5e5e5;
        white-space: nowrap;
    }

    .table tbody td {
        padding: 1rem;
        vertical-align: middle;
    }

    .badge {
        padding: 0.4em 0.8em;
        font-size: 12px;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .hidden {
        display: none;
    }

    .task-details {
        background-color: #f8f9fa;
        transition: all 0.3s ease;
    }

    .toggle-details {
        font-size: 16px;
        color: #666;
        transition: transform 0.3s ease;
    }

    .rotate {
        transform: rotate(180deg);
    }

    .task-row {
        cursor: pointer;
    }

    .task-row:hover {
        background-color: #f5f5f5;
    }

    .details-content {
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.02);
    }

    .badge {
        font-weight: 500;
        padding: 6px 12px;
    }

    .btn-sm {
        padding: 5px 10px;
    }

    .farmtool-select {
        min-width: 150px;
        font-size: 14px;
    }

    .form-select-sm {
        padding: 0.25rem 0.5rem;
    }
</style>

<div class="main-container">
    <div class="pd-ltr-20">
        <div class="min-height-200px">
            <div class="page-header">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <div class="title">
                            <h4>My Tasks</h4>
                        </div>
                        <nav aria-label="breadcrumb" role="navigation">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
                                <li class="breadcrumb-item active">My Tasks</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @Model.ErrorMessage
                </div>
            }

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            <div class="card-box mb-30" style="padding: 30px;">
                <div class="pb-20">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Task Description</th>
                                    <th>Created Date</th>
                                    <th>Updated Date</th>
                                    <th>Status</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.UserTasks != null)
                                {
                                    foreach (var task in Model.UserTasks)
                                    {
                                        <tr class="task-row" data-task-id="@task.UserTaskId">
                                            <td class="text-center">
                                                <i class="fa-solid fa-chevron-down toggle-details cursor-pointer"></i>
                                            </td>
                                            <td>@task.UserTaskDescription</td>
                                            <td>@task.CreateDate.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>@task.UpdateDate.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>
                                                <span
                                                    class="badge @(task.Status == 0 ? "bg-danger" : task.Status == 1 ? "bg-warning" : "bg-success")">
                                                    @(task.Status == 0 ? "Waiting" : task.Status == 1 ? "Processing" :
                                                                                                "Completed")
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center align-items-center gap-2">
                                            @if (task.Status == 0)
                                                    {
                                                        <a asp-page="/FarmToolsOfTask/Create"
                                                            asp-route-userTaskId="@task.UserTaskId" class="btn btn-sm btn-primary">
                                                            <i class="fa-solid fa-plus"></i> Add Tools
                                                        </a>
                                                    }
                                                    @if (task.Status == 1)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-primary upload-image-btn"
                                                            data-bs-toggle="modal" data-bs-target="#uploadImageModal"
                                                            data-task-id="@task.UserTaskId">
                                                            <i class="fa-solid fa-image"></i> Tải ảnh & Hoàn thành
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="task-details hidden" id="details-@task.UserTaskId">
                                            <td colspan="6">
                                                <div class="p-4 bg-light rounded">
                                                    <div class="row">
                                                        <div class="col-md-4">
                                                            <h5 class="mb-3">Task Information</h5>
                                                            <div class="mb-2">
                                                                <strong>Staff Name:</strong> @task.UserName
                                                            </div>
                                                            <div class="mb-2">
                                                                <strong>Job Title:</strong> @task.Task.JobTitle
                                                            </div>
                                                            <div class="mb-2">
                                                                <strong>Description:</strong> @task.Task.Description
                                                            </div>
                                                            <div class="mb-2">
                                                                <strong>Start Date:</strong>
                                                                @task.Task.StartDate.ToString("dd/MM/yyyy HH:mm")
                                                            </div>
                                                            <div class="mb-2">
                                                                <strong>End Date:</strong>
                                                                @task.Task.EndDate.ToString("dd/MM/yyyy HH:mm")
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <h5 class="mb-3">Product Information</h5>
                                                            @if (task.Task.Product != null)
                                                            {
                                                                <div class="mb-2">
                                                                    <strong>Product:</strong> @task.Task.Product.ProductName
                                                                </div>
                                                                <div class="mb-2">
                                                                    <strong>Category:</strong>
                                                                    @task.Task.Product.Category.CategoryName
                                                                </div>
                                                                <div class="mb-2">
                                                                    <strong>Productivity:</strong>
                                                                    @task.Task.Productivity @task.Task.ProductivityUnit
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div>No product information available</div>
                                                            }
                                                        </div>
                                                        <div class="col-md-4">
                                                            <h5 class="mb-3">Farm Tools List</h5>
                                                            @if (Model.UserTasks.Any(t => t.FarmToolsOfTask != null &&
                                                                                                                t.FarmToolsOfTask.Any()))
                                                            {
                                                                <ul class="list-group">

                                                                    @if (task.FarmToolsOfTask != null && task.FarmToolsOfTask.Any())
                                                                    {
                                                                        foreach (var tool in task.FarmToolsOfTask)
                                                                        {
                                                                            <li class="list-group-item">
                                                                                <div class="mb-2">
                                                                                    <strong>Name:</strong> @tool.FarmTools.FarmToolsName
                                                                                </div>
                                                                                <div class="mb-2">
                                                                                    <strong>Quantity:</strong> @tool.FarmToolOfTaskQuantity @tool.FarmToolOfTaskUnit
                                                                                </div>
                                                                                <div class="mb-2">
                                                                                    <strong>Status:</strong>  @(tool.Status == 1 ? "Pending" :
                                                                                                                tool.Status == 2 ? "Extend" :
                                                                                                                tool.Status == 3 ? "Returning" :
                                                                                                                tool.Status == 4 ? "Finish" :
                                                                                                                tool.Status == 5 ? "Damaged" : "Unknown")
                                                                                </div>
                                                                            </li>
                                                                            @if (tool.Status == 1 || tool.Status == 2)
                                                                            {
                                                                                <a asp-page="/FarmToolsOfTask/Extend"
                                                                                   asp-route-id="@tool.FarmToolsOfTaskId"
                                                                                   class="btn btn-sm btn-primary">
                                                                                    <i class="fa-solid fa-plus"></i> Extend
                                                                                </a>
                                                                            }
                                                                        }
                                                                    }
                                                                </ul>
                                                            }
                                                            else
                                                            {
                                                                <div>No farm tools available</div>
                                                            }
                                                        </div>

                                                        @if (task.Status == 2 && !string.IsNullOrEmpty(task.ImageUrl))
                                                        {
                                                            <div class="col-md-12 mt-4">
                                                                <h5 class="mb-3">Task Completion Image</h5>
                                                                <div class="text-center">
                                                                    <img src="@task.ImageUrl" alt="Task completion image"
                                                                        class="img-fluid rounded shadow-sm"
                                                                        style="max-height: 300px;" />
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Upload Image -->
<div class="modal fade" id="uploadImageModal" tabindex="-1" aria-labelledby="uploadImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadImageModalLabel">Upload Task Completion Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="completeTaskForm" method="post">
                    <input type="hidden" id="taskIdInput" name="id" value="" />
                    <input type="hidden" id="imageUrlInput" name="imageUrl" value="" />

                    <div class="mb-4">
                        <label class="form-label fw-bold">Task Image</label>

                        <!-- Image Upload with Drag & Drop -->
                        <div id="dropArea" class="border rounded p-3 text-center mb-3"
                            style="border-style: dashed !important; cursor: pointer;">
                            <i class="fas fa-cloud-upload-alt fa-2x mb-2 text-muted"></i>
                            <p class="mb-0">Drag and drop image here or click to browse</p>
                            <input type="file" id="imageUpload" class="d-none" accept="image/*" />
                        </div>

                        <!-- Image Preview -->
                        <div id="imagePreviewContainer" class="mb-3 text-center d-none">
                            <div class="position-relative d-inline-block">
                                <img id="imagePreview" src="" alt="Task Image Preview"
                                    class="img-fluid rounded shadow-sm mb-2" style="max-height: 250px;" />
                                <button type="button" id="removeImageBtn"
                                    class="btn btn-sm btn-danger position-absolute"
                                    style="top: 5px; right: 5px; border-radius: 50%; width: 30px; height: 30px; padding: 0;">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Upload Progress -->
                        <div class="mt-2">
                            <div class="progress d-none" id="uploadProgress" style="height: 10px;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-success"
                                    role="progressbar" style="width: 0%"></div>
                            </div>
                        </div>
                    </div>

                    <div class="d-grid">
                        <button type="submit" id="completeTaskBtn" class="btn btn-success btn-lg" disabled
                            asp-page-handler="Complete">
                            <i class="fas fa-check me-2"></i> Upload Image
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Setup for AJAX
            $.ajaxSetup({
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                }
            });

            // Click vào hàng để toggle details
            $('.task-row').click(function (e) {
                if (!$(e.target).closest('button, form').length) {
                    const taskId = $(this).data('task-id');
                    const detailsRow = $(`#details-${taskId}`);
                    const icon = $(this).find('.toggle-details');

                    icon.toggleClass('rotate');
                    detailsRow.slideToggle(300);

                    $('.task-details').not(detailsRow).slideUp(300);
                    $('.toggle-details').not(icon).removeClass('rotate');
                }
            });

            // DataTable initialization
            $('.table').DataTable({
                autoWidth: true,
                searching: true,
                lengthChange: true,
                pageLength: 10,
                ordering: true,
                info: true,
                scrollX: false,
                columnDefs: [
                    { orderable: false, targets: [0, 5] }
                ],
                language: {
                    search: "Search tasks:",
                    lengthMenu: "Show _MENU_ tasks per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ tasks"
                }
            });
        });
    </script>

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <!-- Firebase App (the core Firebase SDK) -->
    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";
        import { getStorage, ref, uploadBytesResumable, getDownloadURL } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-storage.js";

        // Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyBrhzHppn0MSFRv8Y70pL--IjAqE_dqYP8",
            authDomain: "farm-task-management-1b5e2.firebaseapp.com",
            projectId: "farm-task-management-1b5e2",
            storageBucket: "farm-task-management-1b5e2.firebasestorage.app",
            messagingSenderId: "523429271962",
            appId: "1:523429271962:web:a5025d2fb87bdb7b75c223"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const storage = getStorage(app);

        // DOM Elements
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('imageUpload');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');
        const imagePreview = document.getElementById('imagePreview');
        const removeImageBtn = document.getElementById('removeImageBtn');
        const imageUrlInput = document.getElementById('imageUrlInput');
        const progressBar = document.querySelector('#uploadProgress .progress-bar');
        const progressContainer = document.getElementById('uploadProgress');
        const completeTaskBtn = document.getElementById('completeTaskBtn');

        // Set task ID when opening modal
        $('.upload-image-btn').click(function () {
            const taskId = $(this).data('task-id');
            $('#taskIdInput').val(taskId);
        });

        // Drag and drop functionality
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dropArea.classList.add('bg-light');
        }

        function unhighlight() {
            dropArea.classList.remove('bg-light');
        }

        // Handle file drop
        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const file = dt.files[0];

            if (file && file.type.startsWith('image/')) {
                fileInput.files = dt.files;
                uploadFile(file);
            } else {
                showToast('Please select a valid image file', 'error');
            }
        }

        // Click to select file
        dropArea.addEventListener('click', () => {
            fileInput.click();
        });

        // Handle file selection
        fileInput.addEventListener('change', function () {
            if (this.files && this.files[0]) {
                uploadFile(this.files[0]);
            }
        });

        // Remove image preview
        removeImageBtn.addEventListener('click', function () {
            imageUrlInput.value = '';
            imagePreviewContainer.classList.add('d-none');
            completeTaskBtn.disabled = true;
            showToast('Image removed', 'success');
        });

        // Upload file function
        async function uploadFile(file) {
            if (!file) return;

            try {
                // Show progress bar
                progressContainer.classList.remove('d-none');
                progressBar.style.width = '0%';
                progressBar.textContent = '0%';

                // Generate unique filename to avoid conflicts
                const timestamp = new Date().getTime();
                const fileName = `task_${timestamp}_${file.name}`;
                const filePath = `task_images/${fileName}`;
                const storageRef = ref(storage, filePath);

                // Start upload
                const uploadTask = uploadBytesResumable(storageRef, file);

                // Monitor upload progress
                uploadTask.on('state_changed',
                    (snapshot) => {
                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                        progressBar.style.width = progress + '%';
                        progressBar.textContent = Math.round(progress) + '%';
                    },
                    (error) => {
                        // Handle errors
                        console.error('Upload failed:', error);
                        showToast('Upload failed: ' + error.message, 'error');
                        progressContainer.classList.add('d-none');
                        completeTaskBtn.disabled = true;
                    },
                    async () => {
                        // Upload completed successfully
                        try {
                            const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);

                            // Update UI
                            imageUrlInput.value = downloadURL;
                            imagePreview.src = downloadURL;
                            imagePreviewContainer.classList.remove('d-none');
                            progressContainer.classList.add('d-none');
                            completeTaskBtn.disabled = false;

                            showToast('Image uploaded successfully', 'success');
                        } catch (error) {
                            console.error('Error getting download URL:', error);
                            showToast('Error getting download URL', 'error');
                            completeTaskBtn.disabled = true;
                        }
                    }
                );
            } catch (error) {
                console.error('Error during upload setup:', error);
                showToast('Error during upload setup', 'error');
                completeTaskBtn.disabled = true;
            }
        }

        // Toast notification function
        function showToast(message, type = 'info') {
            // Create toast container if it doesn't exist
            let toastContainer = document.getElementById('toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toast-container';
                toastContainer.className = 'position-fixed bottom-0 end-0 p-3';
                document.body.appendChild(toastContainer);
            }

            // Create toast element
            const toastId = 'toast-' + Date.now();
            const bgClass = type === 'error' ? 'bg-danger' :
                type === 'success' ? 'bg-success' : 'bg-info';

            const toastHtml = `
                                        <div id="${toastId}" class="toast align-items-center ${bgClass} text-white border-0" role="alert" aria-live="assertive" aria-atomic="true">
                                            <div class="d-flex">
                                                <div class="toast-body">
                                                    ${message}
                                                </div>
                                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                                            </div>
                                        </div>
                                    `;

            toastContainer.insertAdjacentHTML('beforeend', toastHtml);

            // Initialize and show toast
            const toastElement = document.getElementById(toastId);
            const toast = new bootstrap.Toast(toastElement, { delay: 3000 });
            toast.show();

            // Remove toast after it's hidden
            toastElement.addEventListener('hidden.bs.toast', function () {
                toastElement.remove();
            });
        }
    </script>
}