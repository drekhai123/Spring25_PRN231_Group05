@page "{id:guid}"
@model FFTMS.RazorPages.Pages.Tasks.EditModel
@{
    ViewData["Title"] = "Edit Task";
    Layout = "_Layout";
}

<div class="main-container">
    <div class="pd-ltr-20 xs-pd-20-10">
        <div class="min-height-200px">
            <div class="page-header">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <div class="title">
                            <h4>Edit Task</h4>
                        </div>
                        <nav aria-label="breadcrumb" role="navigation">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
                                <li class="breadcrumb-item"><a asp-page="/Tasks/Index">Tasks</a></li>
                                <li class="breadcrumb-item active">Edit</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @Model.ErrorMessage
                </div>
            }

            <div class="pd-20 card-box mb-30">
                <form method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input type="hidden" asp-for="TaskId" />
                    <input type="hidden" asp-for="Task.AssignedBy" />

                    <div class="form-group">
                        <label asp-for="Task.JobTitle">Job Title</label>
                        <input asp-for="Task.JobTitle" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label asp-for="Task.Description">Description</label>
                        <textarea asp-for="Task.Description" class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label asp-for="Task.ProductFieldId">Product Field</label>
                        <select asp-for="Task.ProductFieldId" asp-items="@Model.ProductFieldList" class="form-control">
                            <option value="">Select Product Field</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Staff Assignments</label>
                        <div id="staffAssignments">
                            @for (var i = 0; i < Model.Task.UserTasks.Count; i++)
                            {
                                <div class="staff-assignment">
                                    <select name="Task.UserTasks[@i].AssignedTo" asp-items="@Model.UserList"
                                        class="form-control mb-2">
                                        <option value="">Select Staff</option>
                                    </select>
                                    <textarea name="Task.UserTasks[@i].UserTaskDescription" class="form-control mb-2"
                                        placeholder="Task description for this staff">@Model.Task.UserTasks[i].UserTaskDescription</textarea>
                                    @if (i > 0)
                                    {
                                        <button type="button" class="btn btn-danger mb-3 remove-staff">Remove</button>
                                    }
                                </div>
                            }
                        </div>
                        <button type="button" id="addStaff" class="btn btn-secondary mt-2">Add Another Staff</button>
                    </div>

                    <div class="form-group">
                        <label asp-for="Task.StartDate">Start Date</label>
                        <input asp-for="Task.StartDate" type="date" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label asp-for="Task.EndDate">End Date</label>
                        <input asp-for="Task.EndDate" type="date" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label asp-for="Task.Status">Status</label>
                        <select asp-for="Task.Status" class="form-control">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <a asp-page="Index" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            let staffCount = @Model.Task.UserTasks.Count;

            $('#addStaff').click(function () {
                if (staffCount < 5) {
                    const newStaff = `
                                <div class="staff-assignment">
                                    <select name="Task.UserTasks[${staffCount}].AssignedTo" 
                                        class="form-control mb-2">
                                        ${$('select[name="Task.UserTasks[0].AssignedTo"]').html()}
                                    </select>
                                    <textarea name="Task.UserTasks[${staffCount}].UserTaskDescription" 
                                        class="form-control mb-2" 
                                        placeholder="Task description for this staff"></textarea>
                                    <button type="button" class="btn btn-danger mb-3 remove-staff">Remove</button>
                                </div>`;
                    $('#staffAssignments').append(newStaff);
                    staffCount++;
                }
                if (staffCount >= 5) {
                    $('#addStaff').prop('disabled', true);
                }
            });

            $(document).on('click', '.remove-staff', function () {
                $(this).closest('.staff-assignment').remove();
                staffCount--;
                $('#addStaff').prop('disabled', false);
            });
        });
    </script>
}