@page
@model FFTMS.RazorPages.Pages.Tasks.CreateModel
@{
    ViewData["Title"] = "Create Task";
    Layout = "_Layout";
}

<div class="main-container">
    <div class="pd-ltr-20 xs-pd-20-10">
        <div class="min-height-200px">
            <div class="page-header">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <div class="title">
                            <h4>Create New Task</h4>
                        </div>
                        <nav aria-label="breadcrumb" role="navigation">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
                                <li class="breadcrumb-item"><a asp-page="/Tasks/Index">Tasks</a></li>
                                <li class="breadcrumb-item active">Create</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>

            <div class="pd-20 card-box mb-30">
                <form method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Task.JobTitle" class="control-label">Job Title</label>
                        <input asp-for="Task.JobTitle" class="form-control" />
                        <span asp-validation-for="Task.JobTitle" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Task.Description" class="control-label">Description</label>
                        <textarea asp-for="Task.Description" class="form-control"></textarea>
                        <span asp-validation-for="Task.Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Task.AssignedTo" class="control-label">Assigned To</label>
                        @if (Model.UserList == null || !Model.UserList.Any())
                        {
                            <div class="alert alert-warning">
                                No staff members available. Please make sure:
                                1. You are logged in
                                2. There are staff members in the system
                            </div>
                        }
                        <select asp-for="Task.AssignedTo" asp-items="@Model.UserList" class="form-control">
                            <option value="">Select User</option>
                        </select>
                        <span asp-validation-for="Task.AssignedTo" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Task.StartDate" class="control-label">Start Date</label>
                        <input asp-for="Task.StartDate" type="date" class="form-control" />
                        <span asp-validation-for="Task.StartDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Task.EndDate" class="control-label">End Date</label>
                        <input asp-for="Task.EndDate" type="date" class="form-control" />
                        <span asp-validation-for="Task.EndDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        <a asp-page="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@* Debug info *@
<div class="d-none">
    <p>Debug Info:</p>
    <p>UserList is null: @(Model.UserList == null)</p>
    @if (Model.UserList != null)
    {
        <p>UserList count: @Model.UserList.Count()</p>
        foreach (var item in Model.UserList)
        {
            <p>Item: @item.Text (@item.Value)</p>
        }
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}