@page
@model FFTMS.RazorPages.Pages.ProductFieldPages.DetailsModel

@{
    ViewData["Title"] = "Details";
}


<div class="main-container">
	<div class="pd-ltr-20">
		<h1>Details</h1>

        @if (Model.ProductField == null)
        {
            <p>Product Field not found.</p>
        }
        else
        {
            <div>
                <h4>ProductField</h4>
                <hr />
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.Productivity)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.Productivity)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.ProductivityUnit)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.ProductivityUnit)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.StartDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.StartDate)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.EndDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.EndDate)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.CreateDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.CreateDate)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.UpdateDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.UpdateDate)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.Status)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ProductField.Status)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.Product)
                    </dt>
                    <dd class="col-sm-10">
                        @(Model.ProductField.Product != null ? Html.DisplayFor(model => model.ProductField.Product.ProductName) : "N/A")
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ProductField.Field)
                    </dt>
                    <dd class="col-sm-10">
                        @(Model.ProductField.Field != null ? Html.DisplayFor(model => model.ProductField.Field.FieldName) : "N/A")
                    </dd>
                </dl>
            </div>
            <div>
                <a asp-page="./Edit" asp-route-id="@Model.ProductField.ProductFieldId">Edit</a> |
                <a asp-page="./Index">Back to List</a>
            </div>
        }
	</div>
</div>

